cmake_minimum_required(VERSION 2.8)
PROJECT(ST)

SET(CMAKE_MODULE_PATH "${PROJECT_SOURCE_DIR}/CMake")
INCLUDE(Utils)

INCLUDE_DIRECTORIES(".")
IF (DEBUG)
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -g -DDEBUG")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -g -DDEBUG")
ELSE()
    SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++1y -DNDEBUG -O2")
    SET(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c99 -DNDEBUG -O2")
ENDIF()

FIND_PACKAGE(FLEX)
FIND_PACKAGE(LEMON)

SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wno-deprecated-register")

message(STATUS "----------------------------^^^^^^")

SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR})
SET(LIBRARY_OUTPUT_PATH ${PROJECT_BINARY_DIR})

ADD_SUBDIRECTORY(frontend)
ADD_SUBDIRECTORY(PageDB)
ADD_SUBDIRECTORY(BTree)
ADD_SUBDIRECTORY(TypeDB)
ADD_SUBDIRECTORY(context)
ADD_SUBDIRECTORY(Exception)
ADD_SUBDIRECTORY(Stmt)
ADD_SUBDIRECTORY(test)
ADD_SUBDIRECTORY(main)

